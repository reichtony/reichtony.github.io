<?php

return <<<'VALUE'
"namespace IPS\\Theme;\nclass class_core_admin_members extends \\IPS\\Theme\\Template\n{\n\tpublic $cache_key = '365f3b06537aa514c04f6131a3ae9b26';\n\tfunction acpRestrictions( $current, $restrictions, $row ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<form data-ipsform accept-charset='utf-8' class=\"ipsForm_horizontal\" action=\"\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=staff&controller=admin&do=save&id={$row['row_id']}&type={$row['row_id_type']}\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n\" method=\"post\">\n<div class='ipsBox ipsSpacer_bottom'>\n\t<div class='acpFormTabContent'>\n\t\t<ul class='ipsForm ipsForm_horizontal'>\n\t\t\t<li class='ipsFieldRow ipsPad_half  ipsClearfix ' id=\"use_restrictions_id\">\n\t\t\t\t<div class='ipsFieldRow_title '>\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'mod_use_restrictions', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<span class='ipsFieldRow_required'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'required', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t<\/div>\n\t\t\t\t<div class='ipsFieldRow_content  ipsClearfix'>\n\t\t\t\t\t<ul class=\"ipsField_fieldList\" role=\"radiogroup\" id=\"elRadio_mod_use_restrictions_use_restrictions_id\">\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<span class='ipsCustomInput'>\n\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"admin_use_restrictions\" value=\"no\" \nCONTENT;\n\nif ( $current === '*' ):\n$return .= <<<CONTENT\nchecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n id=\"elRadio_admin_use_restrictions_no_use_restrictions_id\">\n\t\t\t\t\t\t\t\t<span><\/span>\n\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t<div class='ipsField_fieldList_content ipsType_break'>\n\t\t\t\t\t\t\t\t<label for='elRadio_admin_use_restrictions_no_use_restrictions_id' id='elField_mod_use_restrictions_label'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'mod_all_permissions', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t\t<span class='ipsFieldRow_desc'>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'admin_all_permissions_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<span class='ipsCustomInput'>\n\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"admin_use_restrictions\" value=\"yes\" \nCONTENT;\n\nif ( $current !== '*' ):\n$return .= <<<CONTENT\nchecked\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n  data-control=\"toggle\" data-toggles=\"permission_form_wrapper\" id=\"elRadio_admin_use_restrictions_yes_use_restrictions_id\">\n\t\t\t\t\t\t\t\t<span><\/span>\n\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t<div class='ipsField_fieldList_content ipsType_break'>\n\t\t\t\t\t\t\t\t<label for='elRadio_admin_use_restrictions_yes_use_restrictions_id' id='elField_mod_use_restrictions_label'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'mod_restricted', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t\t<span class='ipsFieldRow_desc'>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'admin_restricted_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t<\/ul>\n\t\t\t\t<\/div>\n\t\t\t<\/li>\n\t\t<\/ul>\n\t<\/div>\n<\/div>\n\n\t<div id='permission_form_wrapper'>\n\t\t<div class='ipsTabs ipsClearfix ipsJS_show acpFormTabBar' id='elRestrictions_tab' data-ipsTabBar data-ipsTabBar-contentArea=\"#elRestrictions_content\">\n\t\t\t<a href='#elRestrictions_tab' data-action='expandTabs'><i class='fa fa-caret-down'><\/i><\/a>\n\t\t\t<ul role=\"tablist\">\n\t\t\t\t\nCONTENT;\n\nforeach ( $restrictions['applications'] as $appKey => $appId ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li><a class=\"ipsTabs_item \nCONTENT;\n\nif ( $appKey === 'core' ):\n$return .= <<<CONTENT\nipsTabs_activeItem\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" id='\nCONTENT;\n$return .= htmlspecialchars( $appId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_tab_\nCONTENT;\n$return .= htmlspecialchars( $appKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' href='#ipsTabs_elRestrictions_tab_\nCONTENT;\n$return .= htmlspecialchars( $appId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_tab_\nCONTENT;\n$return .= htmlspecialchars( $appKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_panel' role=\"tab\" aria-selected=\"\nCONTENT;\n\nif ( $appKey == 'core' ):\n$return .= <<<CONTENT\ntrue\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nfalse\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$val = \"__app_$appKey\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t<\/ul>\n\t\t<\/div>\n\t\t<div class='acpFormTabContent' id='elRestrictions_content'>\n\t\t\t\nCONTENT;\n\nforeach ( $restrictions['applications'] as $appKey => $appId ):\n$return .= <<<CONTENT\n\n\t\t\t\t<div id='ipsTabs_elRestrictions_tab_\nCONTENT;\n$return .= htmlspecialchars( $appId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_tab_\nCONTENT;\n$return .= htmlspecialchars( $appKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_panel' class='ipsTabs_panel' aria-labelledby=\"\nCONTENT;\n$return .= htmlspecialchars( $appId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_tab_\nCONTENT;\n$return .= htmlspecialchars( $appKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" aria-hidden=\"\nCONTENT;\n\nif ( $appKey === 'core' ):\n$return .= <<<CONTENT\nfalse\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\ntrue\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\t\t\t\n\t\t\t\t\t<div class='ipsPad' data-controller='core.admin.members.restrictions'>\n\t\t\t\t\t\t<div class='ipsAreaBackground ipsPad acpAppRestrictions_header'>\n\t\t\t\t\t\t\t<input type=\"checkbox\" data-ipsToggle id='elRestrict_\nCONTENT;\n$return .= htmlspecialchars( $appKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' value=\"\nCONTENT;\n$return .= htmlspecialchars( $appKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( $current === '*' or ( isset( $current['applications'] ) and array_key_exists( $appKey, $current['applications'] ) ) ):\n$return .= <<<CONTENT\nchecked=\"checked\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n> &nbsp;&nbsp;<label for='elRestrict_\nCONTENT;\n$return .= htmlspecialchars( $appKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'><span class='ipsType_sectionHead'>\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::loggedIn()->language()->addToStack('__app_' . $appKey )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'acprestrictions_app', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/span><\/label>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<br><br>\n\n\t\t\t\t\t\t<ul id='elRestrictions_root_\nCONTENT;\n$return .= htmlspecialchars( $appId, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_tab_\nCONTENT;\n$return .= htmlspecialchars( $appKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='acpAppRestrictions_panel'>\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $restrictions['modules'] ) AND isset( $restrictions['modules'][ $appId ] )  ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $restrictions['modules'][ $appId ] as $moduleKey => $moduleId ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<li class='ipsPad'>\n\t\t\t\t\t\t\t\t\t\t<div class=\"acpRestrictions_header\">\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" data-ipsToggle name=\"r[applications][\nCONTENT;\n$return .= htmlspecialchars( $appKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n][\nCONTENT;\n$return .= htmlspecialchars( $moduleKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n]\" id='elRestrict_\nCONTENT;\n$return .= htmlspecialchars( $appKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlspecialchars( $moduleKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' value=\"\nCONTENT;\n$return .= htmlspecialchars( $moduleKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( $current === '*' or ( isset( $current['applications'] ) and array_key_exists( $appKey, $current['applications'] ) and in_array( $moduleKey, $current['applications'][ $appKey ] ) ) ):\n$return .= <<<CONTENT\nchecked=\"checked\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n> <h2><label for='elRestrict_\nCONTENT;\n$return .= htmlspecialchars( $appKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlspecialchars( $moduleKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'><strong>\nCONTENT;\n\n$val = \"menu__{$appKey}_{$moduleKey}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/h2> &nbsp;&nbsp;<span data-role='toggle' class='ipsJS_show'><a href='#' data-action='expandAll'><strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'expand', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/a> \/ <a href='#' data-action='collapseAll'><strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'collapse', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/a><\/span><\/label>\n\t\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( isset( $restrictions['items'][ $moduleId ] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<ul class=\"acpRestrictions_panel\">\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $restrictions['items'][ $moduleId ] as $title => $items ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"acpRestrictions_subHeader acpRestrictions_open ipsType_light\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\nCONTENT;\n\n$val = \"r__{$title}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3> &nbsp;&nbsp;<span data-role='massToggle' class='ipsJS_show'><a href='#' data-action='checkAll'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'all', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a> \/  <a href='#' data-action='checkNone'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'none', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $items as $k => $v ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" id='elRestrict_\nCONTENT;\n$return .= htmlspecialchars( $appKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlspecialchars( $moduleKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsToggle name=\"r[items][\nCONTENT;\n$return .= htmlspecialchars( $appKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n][\nCONTENT;\n$return .= htmlspecialchars( $moduleKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n][]\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( $current === '*' or ( isset( $current['items'] ) and array_key_exists( $appKey, $current['items'] ) and array_key_exists( $moduleKey, $current['items'][ $appKey ] ) and in_array( $k, $current['items'][ $appKey ][ $moduleKey ] ) ) ):\n$return .= <<<CONTENT\nchecked=\"checked\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n> <label for='elRestrict_\nCONTENT;\n$return .= htmlspecialchars( $appKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlspecialchars( $moduleKey, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$val = \"r__{$v}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<\/ul>\t\t\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"ipsAreaBackground_light ipsClearfix ipsPad ipsType_center\">\n\t\t<button class=\"ipsButton ipsButton_primary\" role=\"button\" type=\"submit\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'save', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/button>\n\t<\/div>\n<\/form>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction adminDetails( $details ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<div class='ipsColumns ipsPad'>\n\t<div class='ipsColumn ipsColumn_narrow ipsResponsive_hidePhone'>\n\t\t<div class='ipsPad ipsType_center'>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( \\IPS\\Member::loggedIn(), 'medium' );\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/div>\n\t<div class='ipsColumn ipsColumn_fluid'>\n\t\t<ul class='ipsDataList'>\n\t\t\t<li class='ipsDataItem ipsClearfix '>\n\t\t\t\t<div class='ipsDataItem_main'>\n\t\t\t\t\t<strong class='ipsDataItem_title'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'username', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t<p class='ipsType_reset'>\n\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $details['username'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/p>\n\t\t\t\t<\/div>\n\t\t\t<\/li>\n\t\t\t<li class='ipsDataItem ipsClearfix '>\n\t\t\t\t<div class='ipsDataItem_main'>\n\t\t\t\t\t<strong class='ipsDataItem_title'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'email_address', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t<p class='ipsType_reset'>\n\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $details['email_address'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/p>\n\t\t\t\t<\/div>\n\t\t\t\t<p class='ipsDataItem_generic ipsDataItem_size3'>\n\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=members&controller=members&do=adminEmail\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_email_button', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_small ipsButton_normal' data-ipsDialog data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_email_button', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t<\/p>\n\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nif ( isset( $details['password'] ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li class='ipsDataItem ipsClearfix '>\n\t\t\t\t\t<div class='ipsDataItem_main'>\n\t\t\t\t\t\t<strong class='ipsDataItem_title'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'password', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\t\t<p class='ipsType_reset'>\n\t\t\t\t\t\t\t<span class='ipsType_light'>\nCONTENT;\n$return .= htmlspecialchars( $details['password'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t\t\t<\/p>\n\t\t\t\t\t<\/div>\n\t\t\t\t\t<p class='ipsDataItem_generic ipsDataItem_size3'>\n\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=members&controller=members&do=adminPassword\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_password', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_small ipsButton_normal' data-ipsDialog data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_password', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t<\/p>\n\t\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction bulkMailPreview( $mail, $members, $count ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='acpBlock'>\n\t<div class='ipsTabs ipsClearfix ipsJS_show acpFormTabBar' id='tabs_bulkmail' data-ipsTabBar data-ipsTabBar-contentArea='#ipsTabs_content_bulkmail'>\n\t\t<a href='#tabs_bulkmail' data-action='expandTabs'><i class='fa fa-caret-down'><\/i><\/a>\n\t\t<ul role='tablist'>\n\t\t\t<li>\n\t\t\t\t<a href='#ipsTabs_tabs_bulkmail_bulkmail_tab_overview_panel' id='bulkmail_tab_overview' class=\"ipsTabs_item ipsTabs_activeItem\" role=\"tab\" aria-selected=\"true\">\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'bm_send_overview', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/a>\n\t\t\t<\/li>\n\t\t\t<li>\n\t\t\t\t<a href='#ipsTabs_tabs_bulkmail_bulkmail_tab_memberlist_panel' id='bulkmail_tab_memberlist' class=\"ipsTabs_item\" role=\"tab\" aria-selected=\"false\">\n\t\t\t\t\t\nCONTENT;\n\n$sprintf = array($count); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'bm_send_recipients', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<\/a>\n\t\t\t<\/li>\n\t\t<\/ul>\n\t<\/div>\n\t<div id='ipsTabs_content_bulkmail' class='acpFormTabContent'>\n\t\t<div id='ipsTabs_tabs_bulkmail_bulkmail_tab_overview_panel' class=\"ipsTabs_panel\" aria-labelledby=\"bulkmail_tab_overview\" aria-hidden=\"false\">\n\t\t\t<ul class='ipsForm ipsForm_horizontal'>\n\t\t\t\t<li class='ipsJS_hide'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'bm_send_overview', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t<li class='ipsFieldRow ipsPad_half ipsClearfix'>\n\t\t\t\t\t<div class='ipsFieldRow_title'>\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'mail_subject', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/div>\n\t\t\t\t\t<div class='ipsFieldRow_content'>\n\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $mail->subject, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/li>\n\t\t\t\t<li class='ipsFieldRow ipsPad_half ipsClearfix'>\n\t\t\t\t\t<div class='ipsFieldRow_title'>\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'mail_body', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/div>\n\t\t\t\t\t<div class='ipsFieldRow_content'>\n\t\t\t\t\t\t<iframe seamless src='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=bulkmail&controller=bulkmail&do=iframePreview&id=\", \"admin\", \"\", array(), 0 ) );\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $mail->id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' style=\"width:100%\" height='350'><\/iframe>\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/li>\n\t\t\t<\/ul>\n\t\t<\/div>\n\t\t<div id='ipsTabs_tabs_bulkmail_bulkmail_tab_memberlist_panel' class=\"ipsTabs_panel\" aria-labelledby=\"bulkmail_tab_memberlist\" aria-hidden=\"false\">\n\t\t\t<div class='ipsJS_hide'>\nCONTENT;\n\n$sprintf = array($count); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'bm_send_recipients', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/div>\n\t\t\t<div class='ipsGrid ipsGrid_collapsePhone'>\n\t\t\t\t\nCONTENT;\n\nforeach ( $members as $_index => $member ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<div class='ipsGrid_span3 ipsPad ipsType_break'>\n\t\t\t\t\t\t<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=members&controller=profile&id={$member['member_id']}\", \"front\", \"profile\", $member['members_seo_name'], 0 ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $member['name'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t<span class='ipsType_light'>(\nCONTENT;\n$return .= htmlspecialchars( $member['email'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n)<\/span>\n\t\t\t\t\t<\/div>\n\t\t\t\t\t\nCONTENT;\n\nif ( $_index > 0 AND ( $_index + 1 ) % 4 == 0 ):\n$return .= <<<CONTENT\n<\/div><div class='ipsGrid ipsGrid_collapsePhone'>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"ipsAreaBackground ipsClearfix ipsPad ipsType_center\">\n\t\t<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=bulkmail&controller=bulkmail&do=form&id=\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $mail->id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_secondary'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'continue_editing', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=bulkmail&controller=bulkmail&do=send&id=\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $mail->id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_primary'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'proceed', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction confirmMassAction( $count, $action, $group=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='ipsMessage ipsMessage_warning'>\n\t\nCONTENT;\n\nif ( $action === 'prune' ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\n$pluralize = array( $count ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'member_prune_confirm_msg', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\n$sprintf = array($group->name); $pluralize = array( $count ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'member_move_confirm_msg', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf, 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\n\nCONTENT;\n\nif ( $action === 'prune' ):\n$return .= <<<CONTENT\n\n\t<div class='ipsPos_center'><a class='ipsButton ipsButton_primary' href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=members&controller=members&do=doPrune\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'continue', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/div>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<div class='ipsPos_center'><a class='ipsButton ipsButton_primary' href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=members&controller=members&do=doMove\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'continue', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction deviceAuthorization( $authorized, $active, $anonymous ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $authorized ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $active ):\n$return .= <<<CONTENT\n\n\t\t<i class=\"fa fa-check\"><\/i>\n\t\t\nCONTENT;\n\nif ( $anonymous ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'device_table_login_key_anonymous', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'device_table_login_key_ok', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t<i class=\"fa fa-clock-o\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'device_table_login_key_expired', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<i class=\"fa fa-times\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'device_table_login_key_no', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction deviceDuplicate(  ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<span class=\"ipsType_warning\"><i class=\"fa fa-exclamation-triangle\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'device_used_other_members', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction deviceHandler( $key ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$handler = NULL;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( is_numeric( $key ) ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\ntry { $handler = \\IPS\\Login\\Handler::load( $key ); } catch( \\Exception $e ) { $handler = NULL; } \n$return .= <<<CONTENT\n\n\nCONTENT;\n\nelseif ( $key ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$handlers = \\IPS\\Login::handlers( TRUE );\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( isset( $handlers[ $key ] ) ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\n$handler = $handlers[ $key ];\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $handler ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n$return .= htmlspecialchars( $handler->_title, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nelseif ( $key ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n$return .= htmlspecialchars( $key, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<em class=\"ipsType_light\" title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'device_handler_unknown_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsTooltip>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'device_handler_unknown', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/em>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction deviceInfo( $device ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<ul class=\"ipsDataList ipsType_normal\">\n\t<li class=\"ipsDataItem\">\n\t\t<span class=\"ipsDataItem_generic ipsDataItem_size5\"><strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'device_table_user_agent', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/span>\n\t\t<span class=\"ipsDataItem_generic\">\n\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $device->userAgent(), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<br>\n\t\t\t<code class=\"ipsType_small\">\nCONTENT;\n$return .= htmlspecialchars( $device->user_agent, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/code>\n\t\t<\/span>\n\t<\/li>\n\t<li class=\"ipsDataItem\">\n\t\t<span class=\"ipsDataItem_generic ipsDataItem_size5\"><strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'device_table_login_key', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/span>\n\t\t<span class=\"ipsDataItem_generic\">\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"members\", \\IPS\\Request::i()->app )->deviceAuthorization( (bool) $device->login_key, TRUE, $device->anonymous );\n$return .= <<<CONTENT\n<br>\n\t\t\t<span class=\"ipsType_small ipsType_light\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'device_table_login_key_info', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t<\/span>\n\t<\/li>\n\t<li class=\"ipsDataItem\">\n\t\t<span class=\"ipsDataItem_generic ipsDataItem_size5\"><strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'device_table_login_handler', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/span>\n\t\t<span class=\"ipsDataItem_generic\">\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"members\", \\IPS\\Request::i()->app )->deviceHandler( $device->login_handler );\n$return .= <<<CONTENT\n\n\t\t<\/span>\n\t<\/li>\n\t<li class=\"ipsDataItem\">\n\t\t<span class=\"ipsDataItem_generic ipsDataItem_size5\"><strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'device_table_last_seen', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/span>\n\t\t<span class=\"ipsDataItem_generic\">\n\t\t\t\nCONTENT;\n\n$val = ( $device->last_seen instanceof \\IPS\\DateTime ) ? $device->last_seen : \\IPS\\DateTime::ts( $device->last_seen );$return .= $val->html();\n$return .= <<<CONTENT\n\n\t\t<\/span>\n\t<\/li>\n<\/ul>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction deviceTable( $table ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n{$table}\n<div class=\"ipsPad_half\">\n\t<span class=\"ipsType_small ipsType_light\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'device_table_login_key_info', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction downloadMemberList( $removedData, $includeInsecure ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class=\"ipsPad ipsType_center\">\n\t<a href=\"\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=members&controller=members&do=export&download=1\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n\" class=\"ipsButton ipsButton_primary ipsButton_large\"><i class=\"fa fa-cloud-download\"><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'members_export', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n<\/div>\n\nCONTENT;\n\nif ( $includeInsecure ):\n$return .= <<<CONTENT\n\n\t<p class=\"ipsMessage ipsMessage_warning\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'member_export_security', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\nCONTENT;\n\nelseif ( !empty( $removedData ) ):\n$return .= <<<CONTENT\n\n\t<div class=\"ipsMessage ipsMessage_warning\">\n\t\t<div class=\"ipsSpacer_bottom\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'member_export_security_intro', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\n\t\t<table class=\"ipsTable ipsAreaBackground_reset\">\n\t\t\t<tr>\n\t\t\t\t<th>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'member_export_security_member', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/th>\n\t\t\t\t<th>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'member_export_security_column', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/th>\n\t\t\t\t<th>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'member_export_security_value', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/th>\n\t\t\t<\/tr>\n\t\t\t\nCONTENT;\n\nforeach ( $removedData as $memberId => $data ):\n$return .= <<<CONTENT\n\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \\IPS\\Request::i()->app )->userLink( \\IPS\\Member::load( $memberId ) );\n$return .= <<<CONTENT\n<\/td>\n\t\t\t\t\t<td>\nCONTENT;\n\n$val = \"{$data[0]}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/td>\n\t\t\t\t\t<td>\nCONTENT;\n\n$return .= htmlspecialchars( base64_decode( $data[1] ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/td>\n\t\t\t\t<\/tr>\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/table>\n\t\t<div class=\"ipsSpacer_top\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'member_export_security_footer', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction geoipDisclaimer(  ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class=\"ipsType_small ipsType_light ipsPad_half\">* \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'ip_geolocation_info', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction groupCell( $group, $secondaryGroups ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n$return .= htmlspecialchars( $group, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( count( $secondaryGroups ) ):\n$return .= <<<CONTENT\n\n\t<br>\n\t<span class='ipsType_light ipsType_small'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'secondary_groups', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n: \nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Member::loggedIn()->language()->formatList( $secondaryGroups ), ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction groupLink( $group ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=members&controller=members&advanced_search_submitted=1&members_member_group_id={$group->g_id}&noColumn=1\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $group->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction importMemberErrors( $errors ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class=\"ipsPad\">\n\t<p class=\"ipsType_normal\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'import_member_errors', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t<ul>\n\t\t\nCONTENT;\n\nforeach ( $errors as $error ):\n$return .= <<<CONTENT\n\n\t\t\t<li>\nCONTENT;\n$return .= htmlspecialchars( $error, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/li>\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t<\/ul>\n<\/div>\n<div class=\"ipsAreaBackground_light ipsClearfix ipsPad ipsType_center\">\n\t<a class=\"ipsButton ipsButton_primary\" href=\"\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=members&controller=members\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'step_finish', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction ipform( $ip, $members ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<div class=''>\n\t<div class='ipsBox'>\n\t\t<h1 class='ipsBox_titleBar'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'ipaddress_table_header', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\t\t<div>\n\t\t\t{$ip}\n\t\t<\/div>\n\t<\/div>\n<\/div>\n\n<div class='ipsSpacer_top'>\n\t<div class='ipsBox'>\n\t\t<h1 class='ipsBox_titleBar'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'memberip_table_header', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h1>\n\t\t<div>\n\t\t\t{$members}\n\t\t<\/div>\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction logType( $type ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $type === 'display_name' ):\n$return .= <<<CONTENT\n\n\t<i class=\"fa fa-user\"><\/i>\n\nCONTENT;\n\nelseif ( $type === 'email_change' ):\n$return .= <<<CONTENT\n\n\t<i class=\"fa fa-envelope-o\"><\/i>\n\nCONTENT;\n\nelseif ( $type === 'password_change' ):\n$return .= <<<CONTENT\n\n\t<i class=\"fa fa-key\"><\/i>\n\nCONTENT;\n\nelseif ( $type === 'mfa' ):\n$return .= <<<CONTENT\n\n\t<i class=\"fa fa-lock\"><\/i>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n$return .= htmlspecialchars( $type, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction memberCounts( $group ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$url = \"app=core&module=members&controller=members&advanced_search_submitted=1&members_member_group_id={$group['g_id']}&noColumn=1\";\n$return .= <<<CONTENT\n\n<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( $url . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n'><span data-ipsGroupCount data-ipsGroupId='\nCONTENT;\n$return .= htmlspecialchars( $group['g_id'], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsLoading ipsLoading_tiny'>&nbsp;<\/span><\/a>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction memberEmailCell( $content ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='ipsType_break'>\n\t{$content}\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction memberReserved( $member=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<em>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'members_name_missing_as_reserved', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/em>\n\nCONTENT;\n\nif ( $member->members_bitoptions['created_externally'] ):\n$return .= <<<CONTENT\n\n\t<br><span data-ipsTooltip class=\"ipsBadge ipsBadge_negative\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'member_reserved_external', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\nCONTENT;\n\nelseif ( ( $member->last_visit == 0 and $member->joined->getTimestamp() > ( time() - 3600 ) ) ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$mins = ceil( ( $member->joined->getTimestamp() - ( time() - 3600 ) ) \/ 60 );\n$return .= <<<CONTENT\n\n\t<br><span data-ipsTooltip title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'members_name_missing_as_reserved_tt', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" class=\"ipsBadge ipsBadge_negative\">\nCONTENT;\n\n$sprintf = array($mins); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'member_reserved_pending_deletion', ENT_DISALLOWED, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/span>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\n\n\n\n\n\n\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction memberSearchResult( $member ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class=\"clearfix clickable\">\n\t<div class=\"left\">\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( $member, 'medium' );\n$return .= <<<CONTENT\n\n\t<\/div>\n\t<div class=\"left ipsMemberData\">\n\t\t{$member->group['prefix']}\nCONTENT;\n$return .= htmlspecialchars( $member->name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n{$member->group['suffix']}<br>\n\t\t<span class=\"ipsType_light\">\nCONTENT;\n$return .= htmlspecialchars( $member->email, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction memberValidatingCell( $email, $message ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<span class=\"ipsType_warning\"><i class=\"fa fa-warning\"><\/i> \nCONTENT;\n$return .= htmlspecialchars( $email, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span><br>\n<span class=\"ipsType_light ipsType_small\">\nCONTENT;\n$return .= htmlspecialchars( $message, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction moderationLimits( $name, $value ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'after', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n<input type=\"number\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[0]\" value=\"\nCONTENT;\n\nif ( isset( $value[0] ) ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $value[0], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n<select name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[1]\">\n\t<option value=\"0\" \nCONTENT;\n\nif ( isset( $value[1] ) and !$value[1] ):\n$return .= <<<CONTENT\nselected=\"selected\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'approved_posts_comments', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n\t<option value=\"1\" \nCONTENT;\n\nif ( isset( $value[1] ) and $value[1] ):\n$return .= <<<CONTENT\nselected=\"selected\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'days_since_joining', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n<\/select>\n&nbsp; \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n &nbsp;\n<span class='ipsCustomInput'>\n\t<input type=\"checkbox\" data-control=\"unlimited\" id='el\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_unlimited' \nCONTENT;\n\nif ( !isset( $value[0] ) or !$value[0] ):\n$return .= <<<CONTENT\nchecked=\"checked\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[2]\">\n\t<span><\/span>\n<\/span>\n <label for='el\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_unlimited' class='ipsField_unlimited'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'never', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction moderatorPermissions( $id, $action, $tabs, $hiddenValues, $actionButtons, $uploadField, $formClass='', $attributes=array(), $sidebar, $form, $errorTabs ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div data-controller='core.admin.members.moderatorPermissions'>\n\t<form accept-charset='utf-8' data-formId=\"\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" action=\"\nCONTENT;\n$return .= htmlspecialchars( $action, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" method=\"post\" \nCONTENT;\n\nif ( $uploadField ):\n$return .= <<<CONTENT\nenctype=\"multipart\/form-data\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-ipsForm class=\"\nCONTENT;\n$return .= htmlspecialchars( $formClass, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nforeach ( $attributes as $k => $v ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n>\n\t\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_submitted\" value=\"1\">\n\t\t\nCONTENT;\n\nforeach ( $hiddenValues as $k => $v ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( is_array($v) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nforeach ( $v as $_v ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[]\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $_v, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t<input type=\"hidden\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $k, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $v, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $uploadField ):\n$return .= <<<CONTENT\n\n\t\t\t<input type=\"hidden\" name=\"MAX_FILE_SIZE\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $uploadField, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<div class='ipsBox ipsSpacer_bottom'>\n\t\t\t<div class='acpFormTabContent'>\n\t\t\t\t<ul class='ipsForm \nCONTENT;\n$return .= htmlspecialchars( $formClass, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\nCONTENT;\n\nforeach ( $tabs[''] as $input ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t{$input->rowHtml( $form )}\n\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/ul>\n\t\t\t<\/div>\n\t\t<\/div>\n\t\t<div id='permission_form_wrapper'>\n\t\t\t<div class=\"ipsClearfix\">\n\t\t\t\t<div class=\"ipsJS_show ipsSpacer_bottom ipsSpacer_half\">\n\t\t\t\t\t<ul class=\"ipsList_inline ipsList_noSpacing\">\n\t\t\t\t\t\t<li><a href=\"#\" class=\"ipsButton ipsButton_veryLight ipsButton_verySmall\" data-role=\"checkAll\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'check_all', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t<li><a href=\"#\" class=\"ipsButton ipsButton_veryLight ipsButton_verySmall\" data-role=\"uncheckAll\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'uncheck_all', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t<\/ul>\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<div class='ipsBox'>\n\t\t\t\t\nCONTENT;\n\nif ( $form->error ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<div class=\"ipsMessage ipsMessage_error\">\n\t\t\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $form->error, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/div>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( !empty( $errorTabs ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<p class=\"ipsMessage ipsMessage_error ipsJS_show\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'tab_error', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<div class='ipsTabs ipsClearfix ipsJS_show acpFormTabBar' id='tabs_\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsTabBar data-ipsTabBar-contentArea='#ipsTabs_content_\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t<a href='#tabs_\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-action='expandTabs'><i class='fa fa-caret-down'><\/i><\/a>\n\t\t\t\t\t<ul role='tablist'>\n\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $tabs as $name => $content ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $name ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<a href='#ipsTabs_tabs_\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_tab_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_panel' id='\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_tab_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class=\"ipsTabs_item \nCONTENT;\n\nif ( in_array( $name, $errorTabs ) ):\n$return .= <<<CONTENT\nipsTabs_error\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" role=\"tab\" aria-selected=\"false\">\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( in_array( $name, $errorTabs ) ):\n$return .= <<<CONTENT\n<i class=\"fa fa-exclamation-circle\"><\/i> \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n$val = \"{$name}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/ul>\n\t\t\t\t<\/div>\n\t\t\t\t<div id='ipsTabs_content_\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='acpFormTabContent'>\n\t\t\t\t\t\nCONTENT;\n\nforeach ( $tabs as $name => $collection ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $name ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<div id='ipsTabs_tabs_\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_tab_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_panel' class=\"ipsTabs_panel\" aria-labelledby=\"\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_tab_\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" aria-hidden=\"false\">\n\t\t\t\t\t\t\t\t<ul class='ipsForm \nCONTENT;\n$return .= htmlspecialchars( $formClass, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nforeach ( $collection as $input ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t{$input->rowHtml( $form )}\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t<\/div>\n\t\t<div class=\"ipsAreaBackground_light ipsClearfix ipsPad ipsType_center\">\n\t\t\t\nCONTENT;\n\n$return .= implode( '', $actionButtons );\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/div>\n<\/form>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction postingLimits( $name, $value ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'after', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n<input type=\"number\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[0]\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $value[0], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsField_short\">\n<select name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[1]\" class=\"ipsField_short\">\n\t<option value=\"0\" \nCONTENT;\n\nif ( !$value[1] ):\n$return .= <<<CONTENT\nselected=\"selected\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'approved_posts_comments', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n\t<option value=\"1\" \nCONTENT;\n\nif ( $value[1] ):\n$return .= <<<CONTENT\nselected=\"selected\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'days_since_joining', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n<\/select>\n&nbsp; \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n &nbsp;\n<span class='ipsCustomInput'>\n\t<input type=\"checkbox\" data-control=\"unlimited\" id='el\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_unlimited' \nCONTENT;\n\nif ( !$value[0] ):\n$return .= <<<CONTENT\nchecked=\"checked\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t<span><\/span>\n<\/span> <label for='el\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_unlimited' class='ipsField_unlimited'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'never', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction prefixSuffix( $name, $color, $prefix, $suffix ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<span id=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_color\" class=\"\nCONTENT;\n\nif ( $prefix or $suffix ):\n$return .= <<<CONTENT\nipsHide\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nipsJS_show\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\t<input type=\"text\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[color]\" id=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_color\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $color, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-control='color' class='ipsField_short'> &nbsp; \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n &nbsp; <a href=\"#\" data-clickshow=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_html\" data-clickhide=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_color\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'use_html', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n<\/span>\n<span id=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_html\" class=\"\nCONTENT;\n\nif ( !$prefix and !$suffix ):\n$return .= <<<CONTENT\nipsJS_hide\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\t<input type=\"text\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[prefix]\" id=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_prefix\" placeholder=\"&lt;strong&gt;\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $prefix, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsField_short\"> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'g_title', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <input type=\"text\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[suffix]\" id=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_suffix\" placeholder=\"&lt;\/strong&gt;\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $suffix, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsField_short\">\n\t<span class=\"no_js_hide\"> &nbsp; \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n &nbsp; <a href=\"#\" data-clickshow=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_color\" data-clickhide=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_html\" data-clickempty=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_prefix,\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_suffix\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'use_color', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/span>\n<\/span>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction profileCompleteBlurb(  ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='ipsAreaBackground_light ipsPad ipsClearfix'>\n\t<div>\n\t\t<h2 class='ipsType_sectionHead'><strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'profile_complete_blurb_title', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/h2>\n\t\t<div class='ipsType_normal ipsType_reset'>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'profile_complete_blurb_desc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction profileCompleteTitle( $step ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$val = \"profile_step_title_{$step['step_id']}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n<div class=\"ipsType_small ipsType_light\">\nCONTENT;\n\n$val = \"profile_step_text_{$step['step_id']}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction quickRegisterDisabled(  ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div id='acpWarnings'>\n\t<div class='ipsAreaBackground_light ipsPad'>\n\t\t<div>\n\t\t\t<h2 class='ipsType_sectionHead'><strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'profile_complete_quick_register_off_title', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/h2>\n\t\t\t<div class='ipsType_normal ipsType_reset'>\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'profile_complete_quick_register_off', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t<ul class='ipsToolList ipsToolList_horizontal ipsAlert_buttonRow ipsClear ipsClearfix'>\n\t\t\t\t\t<li class=\"ipsPos_left\"><a href=\"\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=membersettings&controller=profilecompletion&do=enableQuickRegister\", null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n\" class=\"ipsButton ipsButton_primary\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'profile_complete_quick_register_off_button', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t<\/ul>\n\t\t\t<\/div>\n\t\t<\/div>\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction restrictionsLabel( $value ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $value === '*'  ):\n$return .= <<<CONTENT\n\n\t<span class='ipsBadge ipsBadge_positive'><i class='fa fa-check-square-o'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'unrestricted', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<span class='ipsBadge ipsBadge_intermediary'><i class='fa fa-exclamation-triangle'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'restricted', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction signatureLimits( $name, $value ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'after', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n<input type=\"number\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[0]\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $value[0], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" min=\"0\" class=\"ipsField_short\">\n<select name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[1]\" class=\"ipsField_short\">\n\t<option value=\"0\" \nCONTENT;\n\nif ( !$value[1] ):\n$return .= <<<CONTENT\nselected=\"selected\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'approved_posts_comments', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n\t<option value=\"1\" \nCONTENT;\n\nif ( $value[1] ):\n$return .= <<<CONTENT\nselected=\"selected\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'days_since_joining', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n<\/select>\n&nbsp; \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n &nbsp;\n<span class='ipsCustomInput'>\n\t<input type=\"checkbox\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[3]\" id='el\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_3' data-control=\"unlimited\" \nCONTENT;\n\nif ( !$value[0] ):\n$return .= <<<CONTENT\nchecked=\"checked\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t<span><\/span>\n<\/span> <label for='el\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_3' class='ipsField_unlimited'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'always', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction usernameChanges( $name, $value ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div>\n\t<span class='ipsCustomInput'>\n\t\t<input type='checkbox' id='\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_canchange' name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[canchange]\" value=\"1\" data-control=\"toggle\" data-toggles=\"group_un_perms\" \nCONTENT;\n\nif ( $value[0] ):\n$return .= <<<CONTENT\nchecked=\"checked\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n> \n\t\t<span><\/span>\n\t<\/span>\n\t<label for='\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_canchange'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'group_allow_username_changes', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n<\/div>\n<br>\n<div id=\"group_un_perms\">\n\t<div data-role=\"unlimitedCatch\">\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'after', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <input type=\"number\" class=\"ipsField_tiny\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $value[1], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[1]\" min=\"0\"> <select name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[2]\" class=\"ipsField_short\"><option value=\"0\" \nCONTENT;\n\nif ( !$value[2] ):\n$return .= <<<CONTENT\nselected=\"selected\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'approved_posts_comments', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option><option value=\"1\" \nCONTENT;\n\nif ( $value[2] ):\n$return .= <<<CONTENT\nselected=\"selected\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'days_since_joining', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option><\/select>  &nbsp; \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n &nbsp; \n\t\t<span class='ipsCustomInput'>\n\t\t\t<input type='checkbox' name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[always]\" id='el\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_always' data-control=\"unlimited\" \nCONTENT;\n\nif ( !$value[1] ):\n$return .= <<<CONTENT\nchecked=\"checked\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t<span><\/span>\n\t\t<\/span> <label for='el\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_always' class='ipsField_unlimited'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'always', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t<\/div>\n\t<br>\n\t<div data-role=\"unlimitedCatch\">\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'can_change_username', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <input type=\"number\" class=\"ipsField_tiny\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $value[0], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[0]\"> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'times_every', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <input type=\"number\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[3]\" class=\"ipsField_tiny\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $value[3], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" min=\"1\"> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'days', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n &nbsp; \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n &nbsp; \n\t\t<span class='ipsCustomInput'>\n\t\t\t<input type='checkbox' name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[unlimited]\" id='el\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_unlimited' value=\"1\" data-control=\"unlimited\" \nCONTENT;\n\nif ( $value[0] == -1 ):\n$return .= <<<CONTENT\nchecked=\"checked\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t<span><\/span>\n\t\t<\/span> <label for='el\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_unlimited' class='ipsField_unlimited'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'unlimited', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction usernameLengthSetting( $name, $value ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'between', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n<input type=\"number\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[0]\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $value[0], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" min=\"1\" class=\"ipsField_short\">\n&nbsp; \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'and', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n &nbsp;\n<input type=\"number\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[1]\" value=\"\nCONTENT;\n$return .= htmlspecialchars( $value[1], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" min=\"1\" max=\"255\" class=\"ipsField_short\">\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'characters_lc', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction warningTime( $name, $value, $prefixLang='after', $unlimitedLang='never' ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$val = \"{$prefixLang}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n<input type=\"number\" name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[0]\" \nCONTENT;\n\nif ( $value[0] != -1 ):\n$return .= <<<CONTENT\nvalue=\"\nCONTENT;\n$return .= htmlspecialchars( $value[0], ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n min=\"0\" class=\"ipsField_short\">\n<select name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[1]\">\n\t<option value=\"h\" \nCONTENT;\n\nif ( $value[1] == 'h' ):\n$return .= <<<CONTENT\nselected=\"selected\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'hours', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n\t<option value=\"d\" \nCONTENT;\n\nif ( $value[1] == 'd' ):\n$return .= <<<CONTENT\nselected=\"selected\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'days', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/option>\n<\/select>\n&nbsp; \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'or', ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n &nbsp;\n<span class='ipsCustomInput'>\n\t<input type=\"checkbox\" data-control=\"unlimited\" id='el\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_unlimited' \nCONTENT;\n\nif ( $value[0] == -1 ):\n$return .= <<<CONTENT\nchecked=\"checked\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n name=\"\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n[3]\">\n\t<span><\/span>\n<\/span> <label for='el\nCONTENT;\n$return .= htmlspecialchars( $name, ENT_QUOTES | ENT_DISALLOWED, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_unlimited' class='ipsField_unlimited'>\nCONTENT;\n\n$val = \"{$unlimitedLang}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, ENT_DISALLOWED, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/label>\nCONTENT;\n\n\t\treturn $return;\n}}"
VALUE;
